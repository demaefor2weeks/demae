name: github-actions-test

on:
  push:
    branches: [main] # main branch로 push 될 때 실행
  pull_request:
    branches: [main]  # main branch로 pull request될 때 실행

env:
  S3_BUCKET_NAME: demae-bucket
  PROJECT_NAME: demae-project
  CODEDEPLOY_NAME: github-actions  # CodeDeploy 애플리케이션 이름으로 실제 값
  CODEDEPLOY_GROUP: github-actions-group

jobs:
  deploy-onpremises:
    name: Deploy On-Premises
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 1.7
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Deploy with CodeDeploy
        run: |
          aws deploy create-deployment \
          --application-name ${{env.CODEDEPLOY_NAME}} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{env.CODEDEPLOY_GROUP}} \
          --s3-location bucket=${S3_BUCKET_NAME},bundleType=zip,key=${{env.PROJECT_NAME}}/$GITHUB_SHA.zip \
          --region ap-northeast-2

      - name: Create CodeDeploy On-Premises configuration
        run: |
          echo "---
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY
          iam_user_arn: arn:aws:iam::637423423379:role/githubactions
          region: $AWS_REGION" > codedeploy.onpremises.yml

      - name: Check configuration file
        run: cat codedeploy.onpremises.yml

      - name: Move configuration file to the correct directory
        run: sudo mkdir -p /etc/codedeploy-agent/conf/ && sudo mv codedeploy.onpremises.yml /etc/codedeploy-agent/conf/

      - name: Restart CodeDeploy Agent
        run: sudo systemctl restart codedeploy-agent

      # ... 추가적인 작업이 필요하다면 이어서 작성 ...

      - name: Additional steps if needed
        run: |
          # Additional steps here
