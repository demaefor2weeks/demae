# workflow의 이름
name: CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ main ] # main branch로 push 될 때 실행됩니다.

# 해당 yml 내에서 사용할 key - value
env:
  S3_BUCKET_NAME: demae-bucket
  PROJECT_NAME: demae-project

# workflow는 한개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  build:
    name: CD
    # 해당 jobs에서 아래의 steps들이 어떠한 환경에서 실행될 것인지를 지정합니다.
    runs-on: ubuntu-latest

    steps:
      # 작업에서 액세스할 수 있도록 $GITHUB_WORKSPACE에서 저장소를 체크아웃합니다.
      - uses: actions/checkout@v2
      - name: Set up JDK 1.7
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

        # $GITHUB_SHA : Github Actions에서 제공하는 여러 기본 환경 변수중 하나
        # 현재 workflow를 실행시키는 커밋의 해쉬값을 나타낸다

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # script files 복사
      # - name: Copy script
      #   run: cp ./scripts/*.sh ./deploy

      # S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      # 여기까지는 성공
      # 하지만 code deploy를 사용해야 자동화 배포가 가능해진다
      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODEDEPLOY_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODEDEPLOY_GROUP --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip

      # Deploy
#      - name: Deploy
#        run: |
#          set -x
#          aws deploy create-deployment \
#          --application-name ${{env.PROJECT_NAME}} \
#          --deployment-config-name CodeDeployDefault.AllAtOnce \
#          --deployment-group-name demae-prod \
#          --file-exists-behavior OVERWRITE \
#          --s3-location bucket=${{env.S3_BUCKET_NAME}},bundleType=zip,key=${{env.PROJECT_NAME}}/$GITHUB_SHA.zip \
#          --region ap-northeast-2

